apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: ruggeriml-dev
  name: db
  labels:
    run: db

spec:
  replicas: 1
  selector:
    matchLabels:
      run: db
  serviceName: "db"

  template:
    metadata:
      generateName: db
      labels:
        run: db

    spec:

      initContainers:
      - name: remove-lost-found
        image: busybox:1.25.0
        imagePullPolicy: "IfNotPresent"
        command: ["rm", "-fr", "/var/lib/postgresql/data/lost+found"]
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      
      - name: download-data
        image: curlimages/curl:7.74.0
        command: ["sh", "-c", "curl -L -o /docker-entrypoint-initdb.d/google-mobility.sql https://raw.githubusercontent.com/Martin-Ruggeri-Ing/datakube/main/google-mobility.sql"]
        volumeMounts:
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d

      containers:
      - name: db-mobility
        image: postgres:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
          name: db
        env:

        #! Variables de entorno de ConfigMap
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: db-configmap
              key: db-name

        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: db-configmap
              key: db-user

        #! Variables de entorno de Secret
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-pass

        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true

      volumes:
      - name: init-sql
        emptyDir: {}
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data

  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 3Gi


---

#T* Service postgres
apiVersion: v1
kind: Service
metadata:
  name: db  #! Nombre.
  namespace: ruggeriml-dev
  labels:
    run: db  #! Etiqueta.

spec:
  selector: #! Pods a los que el servicio debe dirigir el tr√°fico.
    run: db
  ports:
    - port: 5432 #! Puerto del servicio.
      targetPort: 5432 #! Puerto del Pod.
      protocol: TCP

